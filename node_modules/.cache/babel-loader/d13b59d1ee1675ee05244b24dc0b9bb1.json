{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_QUOTE_FAILURE, FETCH_QUOTE_SUCCESS, FETCH_QUOTE_REQUEST, SET_PLAYER_USERNAME, ADD_NEW_GUESS, ADD_MISSTAKE } from \"./userTypes\";\nconst api = axios.create({\n  baseURL: \"http://api.quotable.io/random\"\n});\n\nconst fetchQuoteRequest = () => {\n  return {\n    type: FETCH_QUOTE_REQUEST\n  };\n};\n\nconst fetchQuoteSuccess = quoteData => {\n  return {\n    type: FETCH_QUOTE_SUCCESS,\n    payload: quoteData\n  };\n};\n\nconst fetchQuoteFailure = error => {\n  return {\n    type: FETCH_QUOTE_FAILURE,\n    payload: error\n  };\n};\n\nconst setupUsername = username => {\n  return {\n    type: SET_PLAYER_USERNAME,\n    payload: username\n  };\n};\n\nconst addNewGuess = letter => {\n  return {\n    type: ADD_NEW_GUESS,\n    payload: letter\n  };\n};\n\nconst addMisstake = value => {\n  return {\n    type: ADD_MISSTAKE,\n    payload: value\n  };\n}; //it not pure , changes within the api\n\n\nexport const fetchQuote = () => {\n  return dispatch => {\n    dispatch(fetchQuoteRequest());\n    api.get().then(res => {\n      const data = res.data;\n      dispatch(fetchQuoteSuccess(data));\n    }).catch(error => {\n      const errorMsg = error.message;\n      dispatch(fetchQuoteFailure(errorMsg));\n    });\n  };\n};\nexport const changeUser = username => {\n  return dispatch => {\n    dispatch(setupUsername(username));\n  };\n};\nexport const addGuess = letter => {\n  return dispatch => {\n    dispatch(addNewGuess(letter));\n  };\n};\nexport const addMiss = value => {\n  return dispatch => {\n    dispatch(addMisstake(value));\n  };\n};","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/redux/user/userActions.js"],"names":["axios","FETCH_QUOTE_FAILURE","FETCH_QUOTE_SUCCESS","FETCH_QUOTE_REQUEST","SET_PLAYER_USERNAME","ADD_NEW_GUESS","ADD_MISSTAKE","api","create","baseURL","fetchQuoteRequest","type","fetchQuoteSuccess","quoteData","payload","fetchQuoteFailure","error","setupUsername","username","addNewGuess","letter","addMisstake","value","fetchQuote","dispatch","get","then","res","data","catch","errorMsg","message","changeUser","addGuess","addMiss"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,aALF,EAMEC,YANF,QAOO,aAPP;AASA,MAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAb,CAAZ;;AAIA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMS,iBAAiB,GAAIC,SAAD,IAAe;AACvC,SAAO;AACLF,IAAAA,IAAI,EAAET,mBADD;AAELY,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALD;;AAOA,MAAME,iBAAiB,GAAIC,KAAD,IAAW;AACnC,SAAO;AACLL,IAAAA,IAAI,EAAEV,mBADD;AAELa,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMC,aAAa,GAAIC,QAAD,IAAc;AAClC,SAAO;AACLP,IAAAA,IAAI,EAAEP,mBADD;AAELU,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMC,WAAW,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACLT,IAAAA,IAAI,EAAEN,aADD;AAELS,IAAAA,OAAO,EAAEM;AAFJ,GAAP;AAID,CALD;;AAMA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACLX,IAAAA,IAAI,EAAEL,YADD;AAELQ,IAAAA,OAAO,EAAEQ;AAFJ,GAAP;AAID,CALD,C,CAOA;;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACd,iBAAiB,EAAlB,CAAR;AACAH,IAAAA,GAAG,CACAkB,GADH,GAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACAJ,MAAAA,QAAQ,CAACZ,iBAAiB,CAACgB,IAAD,CAAlB,CAAR;AACD,KALH,EAMGC,KANH,CAMUb,KAAD,IAAW;AAChB,YAAMc,QAAQ,GAAGd,KAAK,CAACe,OAAvB;AACAP,MAAAA,QAAQ,CAACT,iBAAiB,CAACe,QAAD,CAAlB,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAME,UAAU,GAAId,QAAD,IAAc;AACtC,SAAQM,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACP,aAAa,CAACC,QAAD,CAAd,CAAR;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAMe,QAAQ,GAAIb,MAAD,IAAY;AAClC,SAAQI,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACL,WAAW,CAACC,MAAD,CAAZ,CAAR;AACD,GAFD;AAGD,CAJM;AAKP,OAAO,MAAMc,OAAO,GAAIZ,KAAD,IAAW;AAChC,SAAQE,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACH,WAAW,CAACC,KAAD,CAAZ,CAAR;AACD,GAFD;AAGD,CAJM","sourcesContent":["import axios from \"axios\";\nimport {\n  FETCH_QUOTE_FAILURE,\n  FETCH_QUOTE_SUCCESS,\n  FETCH_QUOTE_REQUEST,\n  SET_PLAYER_USERNAME,\n  ADD_NEW_GUESS,\n  ADD_MISSTAKE,\n} from \"./userTypes\";\n\nconst api = axios.create({\n  baseURL: \"http://api.quotable.io/random\",\n});\n\nconst fetchQuoteRequest = () => {\n  return {\n    type: FETCH_QUOTE_REQUEST,\n  };\n};\n\nconst fetchQuoteSuccess = (quoteData) => {\n  return {\n    type: FETCH_QUOTE_SUCCESS,\n    payload: quoteData,\n  };\n};\n\nconst fetchQuoteFailure = (error) => {\n  return {\n    type: FETCH_QUOTE_FAILURE,\n    payload: error,\n  };\n};\nconst setupUsername = (username) => {\n  return {\n    type: SET_PLAYER_USERNAME,\n    payload: username,\n  };\n};\nconst addNewGuess = (letter) => {\n  return {\n    type: ADD_NEW_GUESS,\n    payload: letter,\n  };\n};\nconst addMisstake = (value) => {\n  return {\n    type: ADD_MISSTAKE,\n    payload: value,\n  };\n};\n\n//it not pure , changes within the api\nexport const fetchQuote = () => {\n  return (dispatch) => {\n    dispatch(fetchQuoteRequest());\n    api\n      .get()\n      .then((res) => {\n        const data = res.data;\n        dispatch(fetchQuoteSuccess(data));\n      })\n      .catch((error) => {\n        const errorMsg = error.message;\n        dispatch(fetchQuoteFailure(errorMsg));\n      });\n  };\n};\n\nexport const changeUser = (username) => {\n  return (dispatch) => {\n    dispatch(setupUsername(username));\n  };\n};\n\nexport const addGuess = (letter) => {\n  return (dispatch) => {\n    dispatch(addNewGuess(letter));\n  };\n};\nexport const addMiss = (value) => {\n  return (dispatch) => {\n    dispatch(addMisstake(value));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}