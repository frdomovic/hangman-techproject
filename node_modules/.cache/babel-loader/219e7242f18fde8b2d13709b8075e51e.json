{"ast":null,"code":"var _jsxFileName = \"/home/chill/Desktop/hangman-ingemark/src/components/HangmanLogic.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport start0 from \"./images/start0.png\";\nimport start1 from \"./images/start1.png\";\nimport start2 from \"./images/start2.png\";\nimport start3 from \"./images/start3.png\";\nimport start4 from \"./images/start4.png\";\nimport start5 from \"./images/start5.png\";\nimport start6 from \"./images/start6.png\";\nimport win from \"./images/win.png\";\nimport lost from \"./images/lost.png\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"../state/index\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: \"https://api.quotable.io/random\"\n});\nexport default function HangmanLogic() {\n  _s();\n\n  const player = useSelector(state => state.player);\n  const misstakeCounter = useSelector(state => state.misstakes);\n  const quoteState = useSelector(state => state.trueQuote);\n  const guessedState = useSelector(state => state.guessed);\n  const [guessWords, setGuessWords] = useState(\"\");\n  const [board, setBoard] = useState([]);\n  const [quote, setQuote] = useState(\"\");\n  const [missT, setMissT] = useState(0);\n  const [gchars, setGchars] = useState(new Set([])); //LOCAL STATE CONSTS FOR SCREEN UPDATE\n\n  const props = {\n    maxWrong: 6,\n    images: [start0, start1, start2, start3, start4, start5, start6, win, lost]\n  };\n  const dispatch = useDispatch(); //REDUX FUNCTIONS FOR UPDATING STATES\n  //ADDING MISSTAKE 0 OR 1\n  //ADDING GUESS - ADDS LETTER TO SET OF GUESSED LETTERS\n  //ADDQUOTE - ADDS QUOTE\n  //RESETGUESS - CREATES NEW EMPTY SET ( NEW SET([]))\n  //RESETMISSTAKES - CHANGES STATE TO 0\n\n  const {\n    addMisstake,\n    addGuess,\n    addQuote,\n    resetGuess,\n    resetMisstakes\n  } = bindActionCreators(actionCreators, dispatch); //RUN ONCE THE PAGE LOADS AND DONT RUN AGAIN\n\n  const getQuote = async () => {\n    let line = await api.get().then(res => {\n      return res.data.content;\n    });\n    setQuote(line);\n  };\n\n  useEffect(() => {\n    getQuote();\n    let line = guessingGame();\n    console.log(line);\n  }, []);\n  /*useEffect(() => {\n    //SETTING UP LETTER BUTTON BOARD\n    setBoard(createKeys());\n    //GETTING RANDOM QUOTE FROM API\n    /*\n    getQuote();\n    guessingGame();\n  }, []); */\n  //FUNCTION FOR MAPPING OVER FETCHED SENTENCE AND RETURNING IT\n  //AS \"_\" FOR LETTERS THAT HAVE NOT BEEN GUESSED\n  //FIRST IF CHECK IF THE LETTER IS ALPHA BECAUSE OTHER SYMBOLS\n  //DONT GET FLAGGED WITH \"_\"\n\n  const guessingGame = () => {\n    let lines = quote.split(\"\").map(letter => {\n      if (/[a-zA-Z]/.test(letter)) {\n        return gchars.has(letter.toLowerCase()) || gchars.has(letter.toUpperCase()) ? letter : \" _ \";\n      } else {\n        return letter === \" \" ? \"    \" : letter;\n      }\n    });\n    setGuessWords(lines);\n    return lines;\n  }; //FUNCTION THAT GETS TRIGGERED BY BUTTON CLICK\n  //IT PUSHES LETTER TO SET OF GUESSED LETTERS\n  //IT ALSO SHOULD INCREMENT MISSTAKES IF LETTER IS NOT IN\n  //QUOTE\n  //DELAYED SETUP OF VALUES ?\n\n\n  const CreateGuess = e => {\n    let temp = gchars;\n    temp.add(e.target.value); //LOCAL HOOKS THAT HOLD GUESSED LETTERS\n\n    setGchars(temp); //REDUX STATE FUNCTION TO CHANGE SET AND UPDATE IT WITH NEW VALUE\n\n    addGuess(e.target.value); //IT ALWAYS DOES STATE-1 FOR SOMEREASON IN THIS ENVIRONMENT\n    //FOR OTHER THINGS GCHARS IS UPTO DATE AND USED\n\n    addMisstake(String(quote).toLowerCase().includes(e.target.value) ? 0 : 1);\n    guessingGame();\n    console.log(e.target.className);\n  };\n\n  const createKeys = () => {\n    return \"abcdefghijklmnoprstuvwzxyq\".split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"m-2 p-2 bg-white text-black rounded-full hover:bg-black hover:text-white\",\n      value: letter,\n      onClick: CreateGuess,\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this));\n  };\n\n  const resetGame = async () => {\n    await api.get().then(res => {\n      setQuote(res.data.content);\n    }); //GETS SET() FROM HOOKS AND CLEARS IT\n    //SETS IT AGAIN AS THE NEW VALUE\n\n    let a = gchars;\n    a.clear();\n    setGchars(a); //RESETS REDUX STATES\n\n    addQuote(quote);\n    resetGuess();\n    resetMisstakes();\n    guessingGame();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 text-white h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center pt-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.images[misstakeCounter],\n        className: \"w-1/5 \",\n        alt: \"hangmangame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pl-10 \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Username: \", player]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Score: 103\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Misstakes \", misstakeCounter, \" of 6 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/3 p-5 ix:w-screen m-auto bg-gray-900 text-center whitespace-pre-wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" align-center  text-[20px] ix:text-[12px]\",\n          children: guessWords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-auto bg-gray-900 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-7\",\n          children: board\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-1/2 mt-3 bg-black rounded text-white border-solid border-2  border-red\",\n          onClick: resetGame,\n          children: [\" \", \"RESET\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HangmanLogic, \"ZPYbIMzH3HZjL/OPVKdoTY9hH5Q=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = HangmanLogic;\n\nvar _c;\n\n$RefreshReg$(_c, \"HangmanLogic\");","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/components/HangmanLogic.js"],"names":["React","useEffect","useState","start0","start1","start2","start3","start4","start5","start6","win","lost","useSelector","useDispatch","bindActionCreators","actionCreators","axios","api","create","baseURL","HangmanLogic","player","state","misstakeCounter","misstakes","quoteState","trueQuote","guessedState","guessed","guessWords","setGuessWords","board","setBoard","quote","setQuote","missT","setMissT","gchars","setGchars","Set","props","maxWrong","images","dispatch","addMisstake","addGuess","addQuote","resetGuess","resetMisstakes","getQuote","line","get","then","res","data","content","guessingGame","console","log","lines","split","map","letter","test","has","toLowerCase","toUpperCase","CreateGuess","e","temp","add","target","value","String","includes","className","createKeys","resetGame","a","clear"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport start0 from \"./images/start0.png\";\nimport start1 from \"./images/start1.png\";\nimport start2 from \"./images/start2.png\";\nimport start3 from \"./images/start3.png\";\nimport start4 from \"./images/start4.png\";\nimport start5 from \"./images/start5.png\";\nimport start6 from \"./images/start6.png\";\nimport win from \"./images/win.png\";\nimport lost from \"./images/lost.png\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"../state/index\";\n\nimport axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.quotable.io/random\",\n});\n\nexport default function HangmanLogic() {\n  const player = useSelector((state) => state.player);\n  const misstakeCounter = useSelector((state) => state.misstakes);\n  const quoteState = useSelector((state) => state.trueQuote);\n  const guessedState = useSelector((state) => state.guessed);\n\n  const [guessWords, setGuessWords] = useState(\"\");\n\n  const [board, setBoard] = useState([]);\n  const [quote, setQuote] = useState(\"\");\n\n  const [missT, setMissT] = useState(0);\n  const [gchars, setGchars] = useState(new Set([]));\n\n  //LOCAL STATE CONSTS FOR SCREEN UPDATE\n  const props = {\n    maxWrong: 6,\n    images: [start0, start1, start2, start3, start4, start5, start6, win, lost],\n  };\n\n  const dispatch = useDispatch();\n  //REDUX FUNCTIONS FOR UPDATING STATES\n  //ADDING MISSTAKE 0 OR 1\n  //ADDING GUESS - ADDS LETTER TO SET OF GUESSED LETTERS\n  //ADDQUOTE - ADDS QUOTE\n  //RESETGUESS - CREATES NEW EMPTY SET ( NEW SET([]))\n  //RESETMISSTAKES - CHANGES STATE TO 0\n  const { addMisstake, addGuess, addQuote, resetGuess, resetMisstakes } =\n    bindActionCreators(actionCreators, dispatch);\n\n  //RUN ONCE THE PAGE LOADS AND DONT RUN AGAIN\n\n  const getQuote = async () => {\n    let line = await api.get().then((res) => {\n      return res.data.content;\n    });\n    setQuote(line);\n  };\n  useEffect(() => {\n    getQuote();\n    let line = guessingGame();\n    console.log(line);\n  }, []);\n\n  /*useEffect(() => {\n    //SETTING UP LETTER BUTTON BOARD\n    setBoard(createKeys());\n    //GETTING RANDOM QUOTE FROM API\n    /*\n    getQuote();\n    guessingGame();\n  }, []); */\n\n  //FUNCTION FOR MAPPING OVER FETCHED SENTENCE AND RETURNING IT\n  //AS \"_\" FOR LETTERS THAT HAVE NOT BEEN GUESSED\n  //FIRST IF CHECK IF THE LETTER IS ALPHA BECAUSE OTHER SYMBOLS\n  //DONT GET FLAGGED WITH \"_\"\n  const guessingGame = () => {\n    let lines = quote.split(\"\").map((letter) => {\n      if (/[a-zA-Z]/.test(letter)) {\n        return gchars.has(letter.toLowerCase()) ||\n          gchars.has(letter.toUpperCase())\n          ? letter\n          : \" _ \";\n      } else {\n        return letter === \" \" ? \"    \" : letter;\n      }\n    });\n    setGuessWords(lines);\n    return lines;\n  };\n\n  //FUNCTION THAT GETS TRIGGERED BY BUTTON CLICK\n  //IT PUSHES LETTER TO SET OF GUESSED LETTERS\n  //IT ALSO SHOULD INCREMENT MISSTAKES IF LETTER IS NOT IN\n  //QUOTE\n  //DELAYED SETUP OF VALUES ?\n\n  const CreateGuess = (e) => {\n    let temp = gchars;\n    temp.add(e.target.value);\n    //LOCAL HOOKS THAT HOLD GUESSED LETTERS\n    setGchars(temp);\n    //REDUX STATE FUNCTION TO CHANGE SET AND UPDATE IT WITH NEW VALUE\n    addGuess(e.target.value);\n    //IT ALWAYS DOES STATE-1 FOR SOMEREASON IN THIS ENVIRONMENT\n    //FOR OTHER THINGS GCHARS IS UPTO DATE AND USED\n    addMisstake(String(quote).toLowerCase().includes(e.target.value) ? 0 : 1);\n    guessingGame();\n    console.log(e.target.className);\n  };\n\n  const createKeys = () => {\n    return \"abcdefghijklmnoprstuvwzxyq\".split(\"\").map((letter) => (\n      <button\n        className=\"m-2 p-2 bg-white text-black rounded-full hover:bg-black hover:text-white\"\n        key={letter}\n        value={letter}\n        onClick={CreateGuess}\n      >\n        {letter}\n      </button>\n    ));\n  };\n\n  const resetGame = async () => {\n    await api.get().then((res) => {\n      setQuote(res.data.content);\n    });\n    //GETS SET() FROM HOOKS AND CLEARS IT\n    //SETS IT AGAIN AS THE NEW VALUE\n    let a = gchars;\n    a.clear();\n    setGchars(a);\n    //RESETS REDUX STATES\n    addQuote(quote);\n    resetGuess();\n    resetMisstakes();\n    guessingGame();\n  };\n\n  return (\n    <div className=\"bg-gray-900 text-white h-screen\">\n      <div className=\"flex justify-center items-center pt-10\">\n        <img\n          src={props.images[misstakeCounter]}\n          className=\"w-1/5 \"\n          alt=\"hangmangame\"\n        />\n        <div className=\"pl-10 \">\n          <div>Username: {player}</div>\n          <div>Score: 103</div>\n          <div>Time</div>\n          <div>Misstakes {misstakeCounter} of 6 </div>\n        </div>\n      </div>\n      <div className=\"flex mt-5\">\n        {}\n        <div className=\"w-1/3 p-5 ix:w-screen m-auto bg-gray-900 text-center whitespace-pre-wrap\">\n          <div className=\" align-center  text-[20px] ix:text-[12px]\">\n            {guessWords}\n          </div>\n        </div>\n      </div>\n      <div className=\"flex mt-5\">\n        <div className=\"m-auto bg-gray-900 text-center\">\n          <div className=\"grid grid-cols-7\">{board}</div>\n          <button\n            className=\"w-1/2 mt-3 bg-black rounded text-white border-solid border-2 \n          border-red\"\n            onClick={resetGame}\n          >\n            {\" \"}\n            RESET{\" \"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}