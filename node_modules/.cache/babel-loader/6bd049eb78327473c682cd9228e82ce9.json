{"ast":null,"code":"import { FETCH_USERS_FAILURE, FETCH_USERS_SUCCESS, FETCH_USERS_REQUEST } from \"./playerTypes\";\nconst initialState = {\n  loading: false,\n  users: [],\n  error: \"\"\n};\n\nconst playerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_USERS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_USERS_SUCCESS:\n      return { ...state,\n        loading: false,\n        users: action.payload,\n        error: \"\"\n      };\n\n    case FETCH_USERS_FAILURE:\n      return { ...state,\n        loading: false,\n        users: [],\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default playerReducer;","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/redux/players/playerReducer.js"],"names":["FETCH_USERS_FAILURE","FETCH_USERS_SUCCESS","FETCH_USERS_REQUEST","initialState","loading","users","error","playerReducer","state","action","type","payload"],"mappings":"AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,eAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,aAAa,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,mBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAHT;AAILL,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAKN,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAJT,OAAP;;AAMF;AACE,aAAOH,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,aAAf","sourcesContent":["import {\n  FETCH_USERS_FAILURE,\n  FETCH_USERS_SUCCESS,\n  FETCH_USERS_REQUEST,\n} from \"./playerTypes\";\n\nconst initialState = {\n  loading: false,\n  users: [],\n  error: \"\",\n};\n\nconst playerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_USERS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_USERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.payload,\n        error: \"\",\n      };\n    case FETCH_USERS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        users: [],\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default playerReducer;\n"]},"metadata":{},"sourceType":"module"}