{"ast":null,"code":"var _jsxFileName = \"/home/chill/Desktop/hangman-ingemark/src/components/HangmanLogic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport UserSetup from \"./UserSetup\";\nimport { images } from \"./images/images\";\nimport { connect } from \"react-redux\";\nimport { fetchQuote, addGuess, addMisstake, resetGameAndData, updateScore, updateTime } from \"../redux/user/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HangmanLogic(_ref) {\n  _s();\n\n  var _this = this;\n\n  let {\n    userData,\n    fetchQuote,\n    addGuess,\n    addMisstake,\n    resetGameAndData,\n    updateScore,\n    updateTime\n  } = _ref;\n  return function (updateTime) {\n    const createKeys = () => {\n      return \"abcdefghijklmnoprstuvwzxyq\".split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: userData.guessedKeys.has(letter) ? userData.guessedKeys.has(letter) && userData.quote.toLowerCase().includes(letter) ? \"p-2 bg-green-900 text-black rounded-full cursor:pointer\" : \"p-2 bg-yellow-500 text-black rounded-full cursor:pointer\" : \"p-2 bg-white text-black rounded-full cursor:pointer hover:bg-yellow-100\",\n        value: letter,\n        disabled: userData.guessedKeys.has(letter),\n        onClick: handleGuess,\n        children: letter\n      }, letter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, _this));\n    };\n\n    useEffect(() => {\n      fetchQuote();\n      const intervalId = setInterval(() => {\n        updateTime();\n      }, 1000);\n      return () => clearInterval(intervalId);\n    }, []);\n\n    function updateTime() {\n      console.log(\"Im activted\");\n    }\n\n    const handleGuess = e => {\n      let guessedArray = userData.guessedKeys;\n      guessedArray.add(e.target.value);\n      addGuess(guessedArray);\n      addMisstake(userData.quote.toLowerCase().includes(e.target.value) ? 0 : 1);\n    };\n\n    const guessingGame = () => {\n      let guessedLetters = userData.guessedKeys;\n      let lines = userData.quote.split(\"\").map(letter => {\n        if (/[a-zA-Z]/.test(letter)) {\n          return guessedLetters.has(letter.toLowerCase()) || guessedLetters.has(letter.toUpperCase()) ? letter : \" _ \";\n        } else {\n          return letter === \" \" ? \"     \" : letter;\n        }\n      });\n      return lines;\n    };\n\n    const guessingGame2 = () => {\n      let guessedLetters = userData.guessedKeys;\n      let lines = userData.quote.split(\"\").map(letter => {\n        if (/[a-zA-Z]/.test(letter)) {\n          return guessedLetters.has(letter.toLowerCase()) || guessedLetters.has(letter.toUpperCase()) ? letter : \"_\";\n        } else {\n          return letter === \" \" ? \" \" : letter;\n        }\n      });\n      return lines;\n    };\n\n    const getPicture = () => {\n      if (userData.misstakes === 6) {\n        return 8;\n      } else if (guessingGame2().join(\"\") === userData.quote) {\n        return 7;\n      } else {\n        return userData.misstakes;\n      }\n    };\n\n    const resetGame = () => {\n      resetGameAndData();\n      fetchQuote();\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-900 text-white h-screen\",\n      children: !userData.username ? /*#__PURE__*/_jsxDEV(UserSetup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center pt-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: images[getPicture()],\n            className: \"w-1/5 \",\n            alt: \"hangmangame\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pl-10 \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Username: \", userData.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Score: \", Math.round(100 / (1 + userData.misstakes)), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Time: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Misstakes: \", userData.misstakes, \" of 6\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, _this), guessingGame2().join(\"\") === userData.quote ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3 p-5 text-[20px] m-auto bg-gray-900 text-center whitespace-pre-wrap\",\n            children: [\"YOU WON AND YOUR SCORE IS BEING SAVED!\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"justify-center items-center p-4 rounded-full flex space-x-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-7 h-7 mr-3 bg-white animate-spin \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, _this) : guessingGame2().join(\"\") !== userData.quote && userData.misstakes === 6 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3 p-5 text-[32px] m-auto bg-gray-900 text-center whitespace-pre-wrap\",\n            children: \"YOU LOST!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/3 p-5 m-auto bg-gray-900 text-center whitespace-pre-wrap\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \" align-center  text-[20px] ix:text-[12px]\",\n                children: userData.quote ? guessingGame() : \"Loading ...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-auto bg-gray-900\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-7 text-center\",\n                children: createKeys()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-screen mt-10 h-10 flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-1/5 bg-yellow-500 rounded border-solid border-2 border-black shadow drop-shadow hover:bg-yellow-400\",\n            onClick: resetGame,\n            children: [\" \", \"RESET\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, _this);\n  }(updateTime);\n}\n\n_s(HangmanLogic, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = HangmanLogic;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchQuote: () => dispatch(fetchQuote()),\n    addGuess: letter => dispatch(addGuess(letter)),\n    addMisstake: value => dispatch(addMisstake(value)),\n    resetGameAndData: () => dispatch(resetGameAndData()),\n    updateScore: value => dispatch(updateScore(value)),\n    updateTime: value => dispatch(updateTime(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HangmanLogic);\n\nvar _c;\n\n$RefreshReg$(_c, \"HangmanLogic\");","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/components/HangmanLogic.js"],"names":["React","useEffect","useState","useRef","UserSetup","images","connect","fetchQuote","addGuess","addMisstake","resetGameAndData","updateScore","updateTime","HangmanLogic","userData","createKeys","split","map","letter","guessedKeys","has","quote","toLowerCase","includes","handleGuess","intervalId","setInterval","clearInterval","console","log","e","guessedArray","add","target","value","guessingGame","guessedLetters","lines","test","toUpperCase","guessingGame2","getPicture","misstakes","join","resetGame","username","Math","round","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport UserSetup from \"./UserSetup\";\nimport { images } from \"./images/images\";\n\nimport { connect } from \"react-redux\";\nimport {\n  fetchQuote,\n  addGuess,\n  addMisstake,\n  resetGameAndData,\n  updateScore,\n  updateTime,\n} from \"../redux/user/userActions\";\n\nfunction HangmanLogic({\n  userData,\n  fetchQuote,\n  addGuess,\n  addMisstake,\n  resetGameAndData,\n  updateScore,\n  updateTime,\n}) {\n  const createKeys = () => {\n    return \"abcdefghijklmnoprstuvwzxyq\".split(\"\").map((letter) => (\n      <button\n        className={\n          userData.guessedKeys.has(letter)\n            ? userData.guessedKeys.has(letter) &&\n              userData.quote.toLowerCase().includes(letter)\n              ? \"p-2 bg-green-900 text-black rounded-full cursor:pointer\"\n              : \"p-2 bg-yellow-500 text-black rounded-full cursor:pointer\"\n            : \"p-2 bg-white text-black rounded-full cursor:pointer hover:bg-yellow-100\"\n        }\n        key={letter}\n        value={letter}\n        disabled={userData.guessedKeys.has(letter)}\n        onClick={handleGuess}\n      >\n        {letter}\n      </button>\n    ));\n  };\n  useEffect(() => {\n    fetchQuote();\n    const intervalId = setInterval(() => {\n      updateTime();\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  function updateTime() {\n    console.log(\"Im activted\");\n  }\n\n  const handleGuess = (e) => {\n    let guessedArray = userData.guessedKeys;\n    guessedArray.add(e.target.value);\n    addGuess(guessedArray);\n    addMisstake(userData.quote.toLowerCase().includes(e.target.value) ? 0 : 1);\n  };\n\n  const guessingGame = () => {\n    let guessedLetters = userData.guessedKeys;\n\n    let lines = userData.quote.split(\"\").map((letter) => {\n      if (/[a-zA-Z]/.test(letter)) {\n        return guessedLetters.has(letter.toLowerCase()) ||\n          guessedLetters.has(letter.toUpperCase())\n          ? letter\n          : \" _ \";\n      } else {\n        return letter === \" \" ? \"     \" : letter;\n      }\n    });\n    return lines;\n  };\n  const guessingGame2 = () => {\n    let guessedLetters = userData.guessedKeys;\n    let lines = userData.quote.split(\"\").map((letter) => {\n      if (/[a-zA-Z]/.test(letter)) {\n        return guessedLetters.has(letter.toLowerCase()) ||\n          guessedLetters.has(letter.toUpperCase())\n          ? letter\n          : \"_\";\n      } else {\n        return letter === \" \" ? \" \" : letter;\n      }\n    });\n    return lines;\n  };\n  const getPicture = () => {\n    if (userData.misstakes === 6) {\n      return 8;\n    } else if (guessingGame2().join(\"\") === userData.quote) {\n      return 7;\n    } else {\n      return userData.misstakes;\n    }\n  };\n  const resetGame = () => {\n    resetGameAndData();\n    fetchQuote();\n  };\n  return (\n    <div className=\"bg-gray-900 text-white h-screen\">\n      {!userData.username ? (\n        <UserSetup />\n      ) : (\n        <div>\n          <div className=\"flex justify-center items-center pt-10\">\n            <img\n              src={images[getPicture()]}\n              className=\"w-1/5 \"\n              alt=\"hangmangame\"\n            />\n            <div className=\"pl-10 \">\n              <div>Username: {userData.username}</div>\n              <div>Score: {Math.round(100 / (1 + userData.misstakes))} </div>\n              <div>Time: {}</div>\n              <div>Misstakes: {userData.misstakes} of 6</div>\n            </div>\n          </div>\n\n          {guessingGame2().join(\"\") === userData.quote ? (\n            <div className=\"flex mt-5\">\n              <div className=\"w-1/3 p-5 text-[20px] m-auto bg-gray-900 text-center whitespace-pre-wrap\">\n                YOU WON AND YOUR SCORE IS BEING SAVED!\n                <div className=\"justify-center items-center p-4 rounded-full flex space-x-3\">\n                  <div className=\"w-7 h-7 mr-3 bg-white animate-spin \"></div>\n                </div>\n              </div>\n            </div>\n          ) : guessingGame2().join(\"\") !== userData.quote &&\n            userData.misstakes === 6 ? (\n            <div className=\"flex mt-5\">\n              <div className=\"w-1/3 p-5 text-[32px] m-auto bg-gray-900 text-center whitespace-pre-wrap\">\n                YOU LOST!\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className=\"flex mt-5\">\n                <div className=\"w-1/3 p-5 m-auto bg-gray-900 text-center whitespace-pre-wrap\">\n                  <div className=\" align-center  text-[20px] ix:text-[12px]\">\n                    {userData.quote ? guessingGame() : \"Loading ...\"}\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex mt-5\">\n                <div className=\"m-auto bg-gray-900\">\n                  <div className=\"grid grid-cols-7 text-center\">\n                    {createKeys()}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"w-screen mt-10 h-10 flex justify-center\">\n            <button\n              className=\"w-1/5 bg-yellow-500 rounded border-solid border-2 border-black shadow drop-shadow hover:bg-yellow-400\"\n              onClick={resetGame}\n            >\n              {\" \"}\n              RESET{\" \"}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.user,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuote: () => dispatch(fetchQuote()),\n    addGuess: (letter) => dispatch(addGuess(letter)),\n    addMisstake: (value) => dispatch(addMisstake(value)),\n    resetGameAndData: () => dispatch(resetGameAndData()),\n    updateScore: (value) => dispatch(updateScore(value)),\n    updateTime: (value) => dispatch(updateTime(value)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HangmanLogic);\n"]},"metadata":{},"sourceType":"module"}