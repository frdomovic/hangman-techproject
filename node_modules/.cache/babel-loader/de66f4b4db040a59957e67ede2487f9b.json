{"ast":null,"code":"var _jsxFileName = \"/home/chill/Desktop/hangman-ingemark/src/components/TimeCounter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { updateTime } from \"../redux/user/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(_ref, props) {\n  _s();\n\n  let {\n    userData,\n    updateTime\n  } = _ref;\n  //const [seconds, setSeconds] = useState(0);\n  const [status, setStatus] = useState(false);\n  useEffect(() => {\n    if (props.status) {\n      let myInterval = setInterval(() => {\n        updateTime(1000);\n      }, 1000);\n      return () => {\n        clearInterval(myInterval);\n      };\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hidden\",\n    children: \"a\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"iW7PMEIJc8b9DQPigLoTVxHyUqc=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateTime: value => dispatch(updateTime(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeCounter);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/components/TimeCounter.js"],"names":["React","useEffect","useState","updateTime","App","props","userData","status","setStatus","myInterval","setInterval","clearInterval","mapStateToProps","state","user","mapDispatchToProps","dispatch","value","connect","TimeCounter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,2BAA3B;;;AAEA,SAASC,GAAT,OAAuCC,KAAvC,EAA8C;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,QAAF;AAAYH,IAAAA;AAAZ,GAAiC;AAC5C;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACE,MAAV,EAAkB;AAChB,UAAIE,UAAU,GAAGC,WAAW,CAAC,MAAM;AACjCP,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAF2B,EAEzB,IAFyB,CAA5B;AAGA,aAAO,MAAM;AACXQ,QAAAA,aAAa,CAACF,UAAD,CAAb;AACD,OAFD;AAGD;AACF,GATQ,CAAT;AAWA,sBAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAhBQL,G;;KAAAA,G;;AAiBT,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLP,IAAAA,QAAQ,EAAEO,KAAK,CAACC;AADX,GAAP;AAGD,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLb,IAAAA,UAAU,EAAGc,KAAD,IAAWD,QAAQ,CAACb,UAAU,CAACc,KAAD,CAAX;AAD1B,GAAP;AAGD,CAJD;;AAKA,eAAeC,OAAO,CAACN,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CI,WAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { updateTime } from \"../redux/user/userActions\";\n\nfunction App({ userData, updateTime }, props) {\n  //const [seconds, setSeconds] = useState(0);\n  const [status, setStatus] = useState(false);\n\n  useEffect(() => {\n    if (props.status) {\n      let myInterval = setInterval(() => {\n        updateTime(1000);\n      }, 1000);\n      return () => {\n        clearInterval(myInterval);\n      };\n    }\n  });\n\n  return <div className=\"hidden\">a</div>;\n}\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.user,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateTime: (value) => dispatch(updateTime(value)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeCounter);\n"]},"metadata":{},"sourceType":"module"}