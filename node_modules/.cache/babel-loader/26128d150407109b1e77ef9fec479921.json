{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_USERS_FAILURE, FETCH_USERS_SUCCESS, FETCH_USERS_REQUEST } from \"./playerTypes\";\nconst api = axios.create({\n  baseURL: \"https://my-json-server.typicode.com/stanko-ingemark/hang_the_wise_man_frontend_task/highscores\"\n});\n\nconst fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  };\n};\n\nconst fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  };\n};\n\nconst fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  };\n}; //it not pure , changes within the api\n\n\nexport const fetchUsers = () => {\n  return dispatch => {\n    dispatch(fetchUsersRequest());\n    api.get().then(res => {\n      const data = res.data;\n      data.sort((a, b) => (a.length - a.uniqueCharacters) * 100 / (a.errors + a.duration / 1000 + 1) - (b.length - b.uniqueCharacters) * 100 / (b.errors + b.duration / 1000 + 1));\n      dispatch(fetchUsersSuccess(data));\n    }).catch(error => {\n      const errorMsg = error.message;\n      dispatch(fetchUsersFailure(errorMsg));\n    });\n  };\n};","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/redux/players/playerActions.js"],"names":["axios","FETCH_USERS_FAILURE","FETCH_USERS_SUCCESS","FETCH_USERS_REQUEST","api","create","baseURL","fetchUsersRequest","type","fetchUsersSuccess","users","payload","fetchUsersFailure","error","fetchUsers","dispatch","get","then","res","data","sort","a","b","length","uniqueCharacters","errors","duration","catch","errorMsg","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,eAJP;AAMA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACvBC,EAAAA,OAAO,EACL;AAFqB,CAAb,CAAZ;;AAKA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMM,iBAAiB,GAAIC,KAAD,IAAW;AACnC,SAAO;AACLF,IAAAA,IAAI,EAAEN,mBADD;AAELS,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALD;;AAOA,MAAME,iBAAiB,GAAIC,KAAD,IAAW;AACnC,SAAO;AACLL,IAAAA,IAAI,EAAEP,mBADD;AAELU,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD,C,CAMA;;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACAH,IAAAA,GAAG,CACAY,GADH,GAEGC,IAFH,CAESC,GAAD,IAAS;AACb,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACAA,MAAAA,IAAI,CAACC,IAAL,CACE,CAACC,CAAD,EAAIC,CAAJ,KACG,CAACD,CAAC,CAACE,MAAF,GAAWF,CAAC,CAACG,gBAAd,IAAkC,GAAnC,IACGH,CAAC,CAACI,MAAF,GAAWJ,CAAC,CAACK,QAAF,GAAa,IAAxB,GAA+B,CADlC,IAEC,CAACJ,CAAC,CAACC,MAAF,GAAWD,CAAC,CAACE,gBAAd,IAAkC,GAAnC,IACGF,CAAC,CAACG,MAAF,GAAWH,CAAC,CAACI,QAAF,GAAa,IAAxB,GAA+B,CADlC,CAJJ;AAOAX,MAAAA,QAAQ,CAACN,iBAAiB,CAACU,IAAD,CAAlB,CAAR;AACD,KAZH,EAaGQ,KAbH,CAaUd,KAAD,IAAW;AAChB,YAAMe,QAAQ,GAAGf,KAAK,CAACgB,OAAvB;AACAd,MAAAA,QAAQ,CAACH,iBAAiB,CAACgB,QAAD,CAAlB,CAAR;AACD,KAhBH;AAiBD,GAnBD;AAoBD,CArBM","sourcesContent":["import axios from \"axios\";\nimport {\n  FETCH_USERS_FAILURE,\n  FETCH_USERS_SUCCESS,\n  FETCH_USERS_REQUEST,\n} from \"./playerTypes\";\n\nconst api = axios.create({\n  baseURL:\n    \"https://my-json-server.typicode.com/stanko-ingemark/hang_the_wise_man_frontend_task/highscores\",\n});\n\nconst fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST,\n  };\n};\n\nconst fetchUsersSuccess = (users) => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users,\n  };\n};\n\nconst fetchUsersFailure = (error) => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error,\n  };\n};\n//it not pure , changes within the api\nexport const fetchUsers = () => {\n  return (dispatch) => {\n    dispatch(fetchUsersRequest());\n    api\n      .get()\n      .then((res) => {\n        const data = res.data;\n        data.sort(\n          (a, b) =>\n            ((a.length - a.uniqueCharacters) * 100) /\n              (a.errors + a.duration / 1000 + 1) -\n            ((b.length - b.uniqueCharacters) * 100) /\n              (b.errors + b.duration / 1000 + 1)\n        );\n        dispatch(fetchUsersSuccess(data));\n      })\n      .catch((error) => {\n        const errorMsg = error.message;\n        dispatch(fetchUsersFailure(errorMsg));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}