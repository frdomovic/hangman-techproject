{"ast":null,"code":"import { FETCH_QUOTE_FAILURE, FETCH_QUOTE_SUCCESS, FETCH_QUOTE_REQUEST, SET_PLAYER_USERNAME, ADD_NEW_GUESS, INCREMENT_MISSTAKE, RESET_GAME_AND_DATA, UPDATE_SCORE, UPDATE_TIME, STATUS_TIMER_FOR_TIME, PUSHING_GAME_DATA_STATUS } from \"./userTypes\";\nconst initialState = {\n  loading: false,\n  quote: \"\",\n  id: \"\",\n  username: \"\",\n  time: 0,\n  score: 100,\n  guessedKeys: new Set([]),\n  misstakes: 0,\n  error: \"\",\n  lengthq: 0,\n  savingdata: false\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_QUOTE_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_QUOTE_SUCCESS:\n      return { ...state,\n        loading: false,\n        quote: action.payload.content,\n        id: action.payload._id,\n        lengthq: action.payload.content.length,\n        error: \"\"\n      };\n\n    case FETCH_QUOTE_FAILURE:\n      return { ...state,\n        loading: false,\n        quote: \"\",\n        error: action.payload\n      };\n\n    case SET_PLAYER_USERNAME:\n      return { ...state,\n        username: action.payload\n      };\n\n    case ADD_NEW_GUESS:\n      return { ...state,\n        guessedKeys: action.payload\n      };\n\n    case INCREMENT_MISSTAKE:\n      return { ...state,\n        misstakes: state.misstakes + action.payload\n      };\n\n    case RESET_GAME_AND_DATA:\n      return { ...state,\n        loading: false,\n        quote: \"\",\n        id: null,\n        username: \"\",\n        time: 0,\n        guessedKeys: new Set([]),\n        misstakes: 0,\n        score: 100,\n        error: \"\",\n        lengthq: 0,\n        savingdata: false\n      };\n\n    case UPDATE_SCORE:\n      return { ...state,\n        score: Math.round(100 / (action.payload + 1))\n      };\n\n    case UPDATE_TIME:\n      return { ...state,\n        time: state.time + action.payload\n      };\n\n    case PUSHING_GAME_DATA_STATUS:\n      return { ...state,\n        savingdata: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/redux/user/userReducer.js"],"names":["FETCH_QUOTE_FAILURE","FETCH_QUOTE_SUCCESS","FETCH_QUOTE_REQUEST","SET_PLAYER_USERNAME","ADD_NEW_GUESS","INCREMENT_MISSTAKE","RESET_GAME_AND_DATA","UPDATE_SCORE","UPDATE_TIME","STATUS_TIMER_FOR_TIME","PUSHING_GAME_DATA_STATUS","initialState","loading","quote","id","username","time","score","guessedKeys","Set","misstakes","error","lengthq","savingdata","userReducer","state","action","type","payload","content","_id","length","Math","round"],"mappings":"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","sourcesContent":["import {\n  FETCH_QUOTE_FAILURE,\n  FETCH_QUOTE_SUCCESS,\n  FETCH_QUOTE_REQUEST,\n  SET_PLAYER_USERNAME,\n  ADD_NEW_GUESS,\n  INCREMENT_MISSTAKE,\n  RESET_GAME_AND_DATA,\n  UPDATE_SCORE,\n  UPDATE_TIME,\n  STATUS_TIMER_FOR_TIME,\n  PUSHING_GAME_DATA_STATUS,\n} from \"./userTypes\";\n\nconst initialState = {\n  loading: false,\n  quote: \"\",\n  id: \"\",\n  username: \"\",\n  time: 0,\n  score: 100,\n  guessedKeys: new Set([]),\n  misstakes: 0,\n  error: \"\",\n  lengthq: 0,\n  savingdata: false,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_QUOTE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_QUOTE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        quote: action.payload.content,\n        id: action.payload._id,\n        lengthq: action.payload.content.length,\n        error: \"\",\n      };\n    case FETCH_QUOTE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        quote: \"\",\n        error: action.payload,\n      };\n    case SET_PLAYER_USERNAME:\n      return {\n        ...state,\n        username: action.payload,\n      };\n    case ADD_NEW_GUESS:\n      return {\n        ...state,\n        guessedKeys: action.payload,\n      };\n    case INCREMENT_MISSTAKE:\n      return {\n        ...state,\n        misstakes: state.misstakes + action.payload,\n      };\n    case RESET_GAME_AND_DATA:\n      return {\n        ...state,\n        loading: false,\n        quote: \"\",\n        id: null,\n        username: \"\",\n        time: 0,\n        guessedKeys: new Set([]),\n        misstakes: 0,\n        score: 100,\n        error: \"\",\n        lengthq: 0,\n\n        savingdata: false,\n      };\n    case UPDATE_SCORE:\n      return {\n        ...state,\n        score: Math.round(100 / (action.payload + 1)),\n      };\n    case UPDATE_TIME:\n      return {\n        ...state,\n        time: state.time + action.payload,\n      };\n    case PUSHING_GAME_DATA_STATUS:\n      return { ...state, savingdata: true };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}