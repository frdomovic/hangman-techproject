{"ast":null,"code":"var _jsxFileName = \"/home/chill/Desktop/hangman-ingemark/src/components/HangmanLogic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport UserSetup from \"./UserSetup\";\nimport { images } from \"./images/images\";\nimport { connect } from \"react-redux\";\nimport { fetchQuote, addGuess, addMisstake } from \"../redux/user/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HangmanLogic(_ref) {\n  _s();\n\n  let {\n    userData,\n    fetchQuote,\n    addGuess,\n    addMisstake\n  } = _ref;\n  const [currentKey, setCurrentKey] = useState(\"\");\n\n  const createKeys = () => {\n    return \"abcdefghijklmnoprstuvwzxyq\".split(\"\").map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"m-2 p-2 bg-white text-black rounded-full\",\n      value: letter,\n      disabled: userData.guessedKeys.has(letter),\n      onClick: handleGuess,\n      children: letter\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this));\n  };\n\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n\n  const handleGuess = e => {\n    //dodavanje novih elemenata u set([])\n    //KORISTENJE SETA JER NEMA DUPLIKATA\n    let guessedArray = userData.guessedKeys;\n    guessedArray.add(e.target.value);\n    addMisstake(userData.quote.toLowerCase().includes(e.target.value) ? 0 : 1); //addGuess(e.target.value);\n    //console.log(userData.error);\n\n    /*addMisstake(String(quote).toLowerCase().includes(e.target.value) ? 0 : 1);\n    guessingGame();\n    console.log(e.target.className);*/\n  };\n\n  const guessingGame = () => {\n    console.log(userData.quote);\n    let guessedLetters = userData.guessedKeys;\n    let lines = userData.quote.split(\"\").map(letter => {\n      if (/[a-zA-Z]/.test(letter)) {\n        return guessedLetters.has(letter.toLowerCase()) || guessedLetters.has(letter.toUpperCase()) ? letter : \" _ \";\n      } else {\n        return letter === \" \" ? \"    \" : letter;\n      }\n    });\n    return lines;\n  };\n\n  const resetGame = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 text-white h-screen\",\n    children: !userData.username ? /*#__PURE__*/_jsxDEV(UserSetup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center pt-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[userData.misstakes],\n          className: \"w-1/5 \",\n          alt: \"hangmangame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pl-10 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Username: \", userData.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Score: 0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Time: 0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Misstakes: \", userData.misstakes, \" of 6\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/3 p-5 m-auto bg-gray-900 text-center whitespace-pre-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" align-center  text-[20px] ix:text-[12px] break-all\",\n            children: userData.quote ? guessingGame() : \"Loading ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-auto bg-gray-900\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-7 text-center\",\n            children: createKeys()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-screen mt-10 h-10 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-1/5 bg-orange-400 rounded border-solid border-2 border-white shadow drop-shadow\",\n          onClick: resetGame,\n          children: [\" \", \"RESET\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HangmanLogic, \"2JYumONHPLZ/y5UrIh7z3pRZYgQ=\");\n\n_c = HangmanLogic;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchQuote: () => dispatch(fetchQuote()),\n    addGuess: letter => dispatch(addGuess(letter)),\n    addMisstake: value => dispatch(addMisstake(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HangmanLogic);\n/**\n * <div className=\"bg-gray-900 text-white h-screen w-screen\">\n      {!userData.username ? (\n        <UserSetup />\n      ) : (\n        <div className=\"flex justify-center items-center pt-10\">\n          <img src={images[0]} className=\"w-1/5 \" alt=\"hangmangame\" />\n          <div className=\"pl-10 \">\n            <div>Username: {userData.username}</div>\n            <div>Score: </div>\n            <div>Time: </div>\n            <div>Misstakes: {userData.misstakes} of 6</div>\n          </div>\n          <div className=\"flex mt-5\">\n            <div className=\"w-1/3 p-5 ix:w-screen m-auto bg-gray-900 text-center whitespace-pre-wrap\">\n              <div className=\"keyboardbuttons align-center  text-[20px] ix:text-[12px]\">\n                {!userData.quote ? \"Loading ...\" : userData.quote}\n              </div>\n            </div>\n          </div>\n          <div className=\"flex mt-5\">\n            <div className=\"m-auto bg-gray-900 text-center\">\n              <div className=\"grid grid-cols-7\">{createKeys()}</div>\n            </div>\n          </div>\n          <div className=\"w-screen mt-10 h-10 flex justify-center\">\n            <button className=\"w-1/5 bg-orange-400 rounded border-solid border-2 border-white shadow drop-shadow\">\n              {\" \"}\n              RESET{\" \"}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n */\n\n/*\n\n<div className=\"flex justify-center items-center pt-10\">\n<img src={images[0]} className=\"w-1/5 \" alt=\"hangmangame\" />\n<div className=\"pl-10 \">\n  <div>Username:</div>\n  <div>Score: </div>\n  <div>Time: </div>\n  <div>Misstakes: {userData.misstakes} of 6</div>\n</div>\n</div>\n<div className=\"flex mt-5\">\n<div className=\"w-1/3 p-5 ix:w-screen m-auto bg-gray-900 text-center whitespace-pre-wrap\">\n  <div className=\"keyboardbuttons align-center  text-[20px] ix:text-[12px]\">\n    {!userData.quote ? \"Loading ...\" : userData.quote}\n  </div>\n</div>\n</div>\n<div className=\"flex mt-5\">\n<div className=\"m-auto bg-gray-900 text-center\">\n  <div className=\"grid grid-cols-7\">{createKeys()}</div>\n</div>\n</div>\n<div className=\"w-screen mt-10 h-10 flex justify-center\">\n<button className=\"w-1/5 bg-orange-400 rounded border-solid border-2 border-white shadow drop-shadow\">\n  {\" \"}\n  RESET{\" \"}\n</button>\n</div> }: \n*/\n\n/*\nconst player = useSelector((state) => state.player);\n  const misstakeCounter = useSelector((state) => state.misstakes);\n  const quoteState = useSelector((state) => state.trueQuote);\n  const guessedState = useSelector((state) => state.guessed);\n\n  const [guessWords, setGuessWords] = useState(\"\");\n\n  const [board, setBoard] = useState([]);\n  const [quote, setQuote] = useState(\"\");\n\n  const [missT, setMissT] = useState(0);\n  const [gchars, setGchars] = useState(new Set([]));\n\n  //LOCAL STATE CONSTS FOR SCREEN UPDATE\n  const props = {\n    maxWrong: 6,\n    images: [start0, start1, start2, start3, start4, start5, start6, win, lost],\n  };\n\n  const dispatch = useDispatch();\n  //REDUX FUNCTIONS FOR UPDATING STATES\n  //ADDING MISSTAKE 0 OR 1\n  //ADDING GUESS - ADDS LETTER TO SET OF GUESSED LETTERS\n  //ADDQUOTE - ADDS QUOTE\n  //RESETGUESS - CREATES NEW EMPTY SET ( NEW SET([]))\n  //RESETMISSTAKES - CHANGES STATE TO 0\n  const { addMisstake, addGuess, addQuote, resetGuess, resetMisstakes } =\n    bindActionCreators(actionCreators, dispatch);\n\n  //RUN ONCE THE PAGE LOADS AND DONT RUN AGAIN\n\n  useEffect(() => {\n    //SETTING UP LETTER BUTTON BOARD\n    setBoard(createKeys());\n    //GETTING RANDOM QUOTE FROM API\n    const getQuote = async () => {\n      let line = await api.get().then((res) => {\n        return res.data.content;\n      });\n      setQuote(line);\n    };\n    getQuote();\n    guessingGame();\n  }, []);\n\n  //FUNCTION FOR MAPPING OVER FETCHED SENTENCE AND RETURNING IT\n  //AS \"_\" FOR LETTERS THAT HAVE NOT BEEN GUESSED\n  //FIRST IF CHECK IF THE LETTER IS ALPHA BECAUSE OTHER SYMBOLS\n  //DONT GET FLAGGED WITH \"_\"\n  const guessingGame = () => {\n    let lines = quote.split(\"\").map((letter) => {\n      if (/[a-zA-Z]/.test(letter)) {\n        return gchars.has(letter.toLowerCase()) ||\n          gchars.has(letter.toUpperCase())\n          ? letter\n          : \" _ \";\n      } else {\n        return letter === \" \" ? \"    \" : letter;\n      }\n    });\n    setGuessWords(lines);\n    return lines;\n  };\n\n  //FUNCTION THAT GETS TRIGGERED BY BUTTON CLICK\n  //IT PUSHES LETTER TO SET OF GUESSED LETTERS\n  //IT ALSO SHOULD INCREMENT MISSTAKES IF LETTER IS NOT IN\n  //QUOTE\n  //DELAYED SETUP OF VALUES ?\n\n  const CreateGuess = (e) => {\n    let temp = gchars;\n    temp.add(e.target.value);\n    //LOCAL HOOKS THAT HOLD GUESSED LETTERS\n    setGchars(temp);\n    //REDUX STATE FUNCTION TO CHANGE SET AND UPDATE IT WITH NEW VALUE\n    addGuess(e.target.value);\n    //IT ALWAYS DOES STATE-1 FOR SOMEREASON IN THIS ENVIRONMENT\n    //FOR OTHER THINGS GCHARS IS UPTO DATE AND USED\n    addMisstake(String(quote).toLowerCase().includes(e.target.value) ? 0 : 1);\n    guessingGame();\n    console.log(e.target.className);\n  };\n\n  const createKeys = () => {\n    return \"abcdefghijklmnoprstuvwzxyq\".split(\"\").map((letter) => (\n      <button\n        className=\"m-2 p-2 bg-white text-black rounded-full\"\n        key={letter}\n        value={letter}\n        onClick={CreateGuess}\n      >\n        {letter}\n      </button>\n    ));\n  };\n\n  const resetGame = async () => {\n    await api.get().then((res) => {\n      setQuote(res.data.content);\n    });\n    //GETS SET() FROM HOOKS AND CLEARS IT\n    //SETS IT AGAIN AS THE NEW VALUE\n    let a = gchars;\n    a.clear();\n    setGchars(a);\n    //RESETS REDUX STATES\n    addQuote(quote);\n    resetGuess();\n    resetMisstakes();\n    guessingGame();\n\n\n\n\n    import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.quotable.io/random\",\n});\n\nconst CreateComponents = () => {\n  const [quote, setQuote] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const data = async () => {\n      await api.get().then((res) => {\n        return res.data.content;\n      });\n    };\n    setQuote(data);\n    setLoading(false);\n  }, []);\n\n  return { quote, loading };\n};\n  };*/\n\nvar _c;\n\n$RefreshReg$(_c, \"HangmanLogic\");","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/components/HangmanLogic.js"],"names":["React","useEffect","useState","UserSetup","images","connect","fetchQuote","addGuess","addMisstake","HangmanLogic","userData","currentKey","setCurrentKey","createKeys","split","map","letter","guessedKeys","has","handleGuess","e","guessedArray","add","target","value","quote","toLowerCase","includes","guessingGame","console","log","guessedLetters","lines","test","toUpperCase","resetGame","username","misstakes","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":"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":["import React, { useEffect, useState } from \"react\";\n\nimport UserSetup from \"./UserSetup\";\nimport { images } from \"./images/images\";\n\nimport { connect } from \"react-redux\";\nimport { fetchQuote, addGuess, addMisstake } from \"../redux/user/userActions\";\n\nfunction HangmanLogic({ userData, fetchQuote, addGuess, addMisstake }) {\n  const [currentKey, setCurrentKey] = useState(\"\");\n  const createKeys = () => {\n    return \"abcdefghijklmnoprstuvwzxyq\".split(\"\").map((letter) => (\n      <button\n        className=\"m-2 p-2 bg-white text-black rounded-full\"\n        key={letter}\n        value={letter}\n        disabled={userData.guessedKeys.has(letter)}\n        onClick={handleGuess}\n      >\n        {letter}\n      </button>\n    ));\n  };\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n  const handleGuess = (e) => {\n    //dodavanje novih elemenata u set([])\n    //KORISTENJE SETA JER NEMA DUPLIKATA\n    let guessedArray = userData.guessedKeys;\n    guessedArray.add(e.target.value);\n    addMisstake(userData.quote.toLowerCase().includes(e.target.value) ? 0 : 1);\n\n    //addGuess(e.target.value);\n    //console.log(userData.error);\n    /*addMisstake(String(quote).toLowerCase().includes(e.target.value) ? 0 : 1);\n    guessingGame();\n    console.log(e.target.className);*/\n  };\n  const guessingGame = () => {\n    console.log(userData.quote);\n    let guessedLetters = userData.guessedKeys;\n\n    let lines = userData.quote.split(\"\").map((letter) => {\n      if (/[a-zA-Z]/.test(letter)) {\n        return guessedLetters.has(letter.toLowerCase()) ||\n          guessedLetters.has(letter.toUpperCase())\n          ? letter\n          : \" _ \";\n      } else {\n        return letter === \" \" ? \"    \" : letter;\n      }\n    });\n    return lines;\n  };\n  const resetGame = () => {};\n\n  return (\n    <div className=\"bg-gray-900 text-white h-screen\">\n      {!userData.username ? (\n        <UserSetup />\n      ) : (\n        <div>\n          <div className=\"flex justify-center items-center pt-10\">\n            <img\n              src={images[userData.misstakes]}\n              className=\"w-1/5 \"\n              alt=\"hangmangame\"\n            />\n            <div className=\"pl-10 \">\n              <div>Username: {userData.username}</div>\n              <div>Score: 0</div>\n              <div>Time: 0</div>\n              <div>Misstakes: {userData.misstakes} of 6</div>\n            </div>\n          </div>\n          <div className=\"flex mt-5\">\n            <div className=\"w-1/3 p-5 m-auto bg-gray-900 text-center whitespace-pre-wrap\">\n              <div className=\" align-center  text-[20px] ix:text-[12px] break-all\">\n                {userData.quote ? guessingGame() : \"Loading ...\"}\n              </div>\n            </div>\n          </div>\n          <div className=\"flex mt-5\">\n            <div className=\"m-auto bg-gray-900\">\n              <div className=\"grid grid-cols-7 text-center\">{createKeys()}</div>\n            </div>\n          </div>\n          <div className=\"w-screen mt-10 h-10 flex justify-center\">\n            <button\n              className=\"w-1/5 bg-orange-400 rounded border-solid border-2 border-white shadow drop-shadow\"\n              onClick={resetGame}\n            >\n              {\" \"}\n              RESET{\" \"}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.user,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuote: () => dispatch(fetchQuote()),\n    addGuess: (letter) => dispatch(addGuess(letter)),\n    addMisstake: (value) => dispatch(addMisstake(value)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HangmanLogic);\n\n/**\n * <div className=\"bg-gray-900 text-white h-screen w-screen\">\n      {!userData.username ? (\n        <UserSetup />\n      ) : (\n        <div className=\"flex justify-center items-center pt-10\">\n          <img src={images[0]} className=\"w-1/5 \" alt=\"hangmangame\" />\n          <div className=\"pl-10 \">\n            <div>Username: {userData.username}</div>\n            <div>Score: </div>\n            <div>Time: </div>\n            <div>Misstakes: {userData.misstakes} of 6</div>\n          </div>\n          <div className=\"flex mt-5\">\n            <div className=\"w-1/3 p-5 ix:w-screen m-auto bg-gray-900 text-center whitespace-pre-wrap\">\n              <div className=\"keyboardbuttons align-center  text-[20px] ix:text-[12px]\">\n                {!userData.quote ? \"Loading ...\" : userData.quote}\n              </div>\n            </div>\n          </div>\n          <div className=\"flex mt-5\">\n            <div className=\"m-auto bg-gray-900 text-center\">\n              <div className=\"grid grid-cols-7\">{createKeys()}</div>\n            </div>\n          </div>\n          <div className=\"w-screen mt-10 h-10 flex justify-center\">\n            <button className=\"w-1/5 bg-orange-400 rounded border-solid border-2 border-white shadow drop-shadow\">\n              {\" \"}\n              RESET{\" \"}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n */\n\n/*\n\n<div className=\"flex justify-center items-center pt-10\">\n<img src={images[0]} className=\"w-1/5 \" alt=\"hangmangame\" />\n<div className=\"pl-10 \">\n  <div>Username:</div>\n  <div>Score: </div>\n  <div>Time: </div>\n  <div>Misstakes: {userData.misstakes} of 6</div>\n</div>\n</div>\n<div className=\"flex mt-5\">\n<div className=\"w-1/3 p-5 ix:w-screen m-auto bg-gray-900 text-center whitespace-pre-wrap\">\n  <div className=\"keyboardbuttons align-center  text-[20px] ix:text-[12px]\">\n    {!userData.quote ? \"Loading ...\" : userData.quote}\n  </div>\n</div>\n</div>\n<div className=\"flex mt-5\">\n<div className=\"m-auto bg-gray-900 text-center\">\n  <div className=\"grid grid-cols-7\">{createKeys()}</div>\n</div>\n</div>\n<div className=\"w-screen mt-10 h-10 flex justify-center\">\n<button className=\"w-1/5 bg-orange-400 rounded border-solid border-2 border-white shadow drop-shadow\">\n  {\" \"}\n  RESET{\" \"}\n</button>\n</div> }: \n*/\n\n/*\nconst player = useSelector((state) => state.player);\n  const misstakeCounter = useSelector((state) => state.misstakes);\n  const quoteState = useSelector((state) => state.trueQuote);\n  const guessedState = useSelector((state) => state.guessed);\n\n  const [guessWords, setGuessWords] = useState(\"\");\n\n  const [board, setBoard] = useState([]);\n  const [quote, setQuote] = useState(\"\");\n\n  const [missT, setMissT] = useState(0);\n  const [gchars, setGchars] = useState(new Set([]));\n\n  //LOCAL STATE CONSTS FOR SCREEN UPDATE\n  const props = {\n    maxWrong: 6,\n    images: [start0, start1, start2, start3, start4, start5, start6, win, lost],\n  };\n\n  const dispatch = useDispatch();\n  //REDUX FUNCTIONS FOR UPDATING STATES\n  //ADDING MISSTAKE 0 OR 1\n  //ADDING GUESS - ADDS LETTER TO SET OF GUESSED LETTERS\n  //ADDQUOTE - ADDS QUOTE\n  //RESETGUESS - CREATES NEW EMPTY SET ( NEW SET([]))\n  //RESETMISSTAKES - CHANGES STATE TO 0\n  const { addMisstake, addGuess, addQuote, resetGuess, resetMisstakes } =\n    bindActionCreators(actionCreators, dispatch);\n\n  //RUN ONCE THE PAGE LOADS AND DONT RUN AGAIN\n\n  useEffect(() => {\n    //SETTING UP LETTER BUTTON BOARD\n    setBoard(createKeys());\n    //GETTING RANDOM QUOTE FROM API\n    const getQuote = async () => {\n      let line = await api.get().then((res) => {\n        return res.data.content;\n      });\n      setQuote(line);\n    };\n    getQuote();\n    guessingGame();\n  }, []);\n\n  //FUNCTION FOR MAPPING OVER FETCHED SENTENCE AND RETURNING IT\n  //AS \"_\" FOR LETTERS THAT HAVE NOT BEEN GUESSED\n  //FIRST IF CHECK IF THE LETTER IS ALPHA BECAUSE OTHER SYMBOLS\n  //DONT GET FLAGGED WITH \"_\"\n  const guessingGame = () => {\n    let lines = quote.split(\"\").map((letter) => {\n      if (/[a-zA-Z]/.test(letter)) {\n        return gchars.has(letter.toLowerCase()) ||\n          gchars.has(letter.toUpperCase())\n          ? letter\n          : \" _ \";\n      } else {\n        return letter === \" \" ? \"    \" : letter;\n      }\n    });\n    setGuessWords(lines);\n    return lines;\n  };\n\n  //FUNCTION THAT GETS TRIGGERED BY BUTTON CLICK\n  //IT PUSHES LETTER TO SET OF GUESSED LETTERS\n  //IT ALSO SHOULD INCREMENT MISSTAKES IF LETTER IS NOT IN\n  //QUOTE\n  //DELAYED SETUP OF VALUES ?\n\n  const CreateGuess = (e) => {\n    let temp = gchars;\n    temp.add(e.target.value);\n    //LOCAL HOOKS THAT HOLD GUESSED LETTERS\n    setGchars(temp);\n    //REDUX STATE FUNCTION TO CHANGE SET AND UPDATE IT WITH NEW VALUE\n    addGuess(e.target.value);\n    //IT ALWAYS DOES STATE-1 FOR SOMEREASON IN THIS ENVIRONMENT\n    //FOR OTHER THINGS GCHARS IS UPTO DATE AND USED\n    addMisstake(String(quote).toLowerCase().includes(e.target.value) ? 0 : 1);\n    guessingGame();\n    console.log(e.target.className);\n  };\n\n  const createKeys = () => {\n    return \"abcdefghijklmnoprstuvwzxyq\".split(\"\").map((letter) => (\n      <button\n        className=\"m-2 p-2 bg-white text-black rounded-full\"\n        key={letter}\n        value={letter}\n        onClick={CreateGuess}\n      >\n        {letter}\n      </button>\n    ));\n  };\n\n  const resetGame = async () => {\n    await api.get().then((res) => {\n      setQuote(res.data.content);\n    });\n    //GETS SET() FROM HOOKS AND CLEARS IT\n    //SETS IT AGAIN AS THE NEW VALUE\n    let a = gchars;\n    a.clear();\n    setGchars(a);\n    //RESETS REDUX STATES\n    addQuote(quote);\n    resetGuess();\n    resetMisstakes();\n    guessingGame();\n\n\n\n\n    import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.quotable.io/random\",\n});\n\nconst CreateComponents = () => {\n  const [quote, setQuote] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const data = async () => {\n      await api.get().then((res) => {\n        return res.data.content;\n      });\n    };\n    setQuote(data);\n    setLoading(false);\n  }, []);\n\n  return { quote, loading };\n};\n  };*/\n"]},"metadata":{},"sourceType":"module"}