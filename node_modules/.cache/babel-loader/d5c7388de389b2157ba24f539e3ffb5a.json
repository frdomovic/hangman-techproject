{"ast":null,"code":"var _jsxFileName = \"/home/chill/Desktop/hangman-ingemark/src/components/Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../redux/players/playerActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Leaderboard(_ref) {\n  _s();\n\n  let {\n    userData,\n    fetchUsers\n  } = _ref;\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"h-screen bg-gray-900 justify-center items-center\",\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this) : userData.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: userData.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData && userData.users && userData.users.map((element, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"id: \", element.id, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"length: \", element.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"quoteId: \", element.quoteId, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"uniqueCharacters: \", element.uniqueCharacters, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"usernam: \", element.userName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"DURATION: \", Math.round(element.duration / 1000)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Leaderboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Leaderboard;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.player\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\n/**\n * {userData &&\n          userData.users &&\n          userData.users.map((element) => {\n              return(\n                <div id={element.id}>\n                <div>id: {element.id} </div>\n                <div>length: {element.length} </div>\n                <div>quoteId: {element.quoteId} </div>\n                <div>uniqueCharacters: {element.uniqueCharacters} </div>\n                <div>usernam: {element.userName} </div>\n                <div>DURATION: {Math.round(element.duration / 1000)}</div>\n                <br />\n              )\n          }\n          )\n        }\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/components/Leaderboard.js"],"names":["React","useEffect","connect","fetchUsers","Leaderboard","userData","loading","error","users","map","element","key","id","length","quoteId","uniqueCharacters","userName","Math","round","duration","mapStateToProps","state","player","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;;AAEA,SAASC,WAAT,OAA+C;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAYF,IAAAA;AAAZ,GAA0B;AAC7CF,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOE,QAAQ,CAACC,OAAT,gBACL;AAAI,IAAA,SAAS,EAAC,kDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAIHD,QAAQ,CAACE,KAAT,gBACF;AAAA,cAAKF,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,UADE,gBAGF;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,QAAQ,IACPA,QAAQ,CAACG,KADV,IAECH,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAAUC,GAAV,KAAkB;AACnC,4BACE;AAAA,kCACE;AAAA,+BAAUD,OAAO,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,mCAAcF,OAAO,CAACG,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,oCAAeH,OAAO,CAACI,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,6CAAwBJ,OAAO,CAACK,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,oCAAeL,OAAO,CAACM,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,qCAAgBC,IAAI,CAACC,KAAL,CAAWR,OAAO,CAACS,QAAR,GAAmB,IAA9B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WAAUR,GAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZD;AAHJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF;AA4BD;;GAjCQP,W;;KAAAA,W;;AAmCT,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLhB,IAAAA,QAAQ,EAAEgB,KAAK,CAACC;AADX,GAAP;AAGD,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLrB,IAAAA,UAAU,EAAE,MAAMqB,QAAQ,CAACrB,UAAU,EAAX;AADrB,GAAP;AAGD,CAJD;;AAKA,eAAeD,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,WAA7C,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../redux/players/playerActions\";\n\nfunction Leaderboard({ userData, fetchUsers }) {\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return userData.loading ? (\n    <h2 className=\"h-screen bg-gray-900 justify-center items-center\">\n      loading...\n    </h2>\n  ) : userData.error ? (\n    <h2>{userData.error}</h2>\n  ) : (\n    <div className=\"bg-gray-900 text-white\">\n      <h2>List of users</h2>\n      <div>\n        {userData &&\n          userData.users &&\n          userData.users.map((element, key) => {\n            return (\n              <div key={key}>\n                <div>id: {element.id} </div>\n                <div>length: {element.length} </div>\n                <div>quoteId: {element.quoteId} </div>\n                <div>uniqueCharacters: {element.uniqueCharacters} </div>\n                <div>usernam: {element.userName} </div>\n                <div>DURATION: {Math.round(element.duration / 1000)}</div>\n                <br />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.player,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\n\n/**\n * {userData &&\n          userData.users &&\n          userData.users.map((element) => {\n              return(\n                <div id={element.id}>\n                <div>id: {element.id} </div>\n                <div>length: {element.length} </div>\n                <div>quoteId: {element.quoteId} </div>\n                <div>uniqueCharacters: {element.uniqueCharacters} </div>\n                <div>usernam: {element.userName} </div>\n                <div>DURATION: {Math.round(element.duration / 1000)}</div>\n                <br />\n              )\n          }\n          )\n        }\n */\n"]},"metadata":{},"sourceType":"module"}