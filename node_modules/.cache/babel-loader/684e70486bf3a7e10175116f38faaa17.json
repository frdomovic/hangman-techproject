{"ast":null,"code":"var _jsxFileName = \"/home/chill/Desktop/hangman-ingemark/src/components/Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../redux/players/playerActions\";\nimport { images } from \"./images/images\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Leaderboard(_ref) {\n  _s();\n\n  let {\n    userData,\n    fetchUsers\n  } = _ref;\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"h-screen bg-gray-900 flex justify-center items-center pt-10\",\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this) : userData.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: userData.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-20 text-white text-lg bg-gray-900 text-center\",\n      children: \"LEADERBOARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-900 text-white flex justify-center items-center \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pt-10\",\n        children: userData && userData.users && userData.users.map((element, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" flex justify-center items-center mb-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ix:w-screen ix:pl-5 ix:pr-5 w-1/2 flex justify-center items-center pb-10 pt-5 border-solid border-2 border-yellow-500 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: images[7],\n                alt: \"hangmanlogo\",\n                className: \"w-1/6 rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pl-10\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-yellow-500\",\n                  children: [\"USERNAME:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white\",\n                    children: element.userName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-yellow-500\",\n                  children: [\"DURATION:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white\",\n                    children: Math.round(element.duration / 1000)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-yellow-500\",\n                  children: [\"LENGTH:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white\",\n                    children: element.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-yellow-500\",\n                  children: [\"QUOTEID:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white\",\n                    children: [element.quoteId, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-yellow-500\",\n                  children: [\"UNIQUE CHARACTERS:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white\",\n                    children: element.uniqueCharacters\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Leaderboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Leaderboard;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.player\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\n/**\n * {userData &&\n          userData.users &&\n          userData.users.map((element) => {\n              return(\n                <div id={element.id}>\n                <div>id: {element.id} </div>\n                <div>length: {element.length} </div>\n                <div>quoteId: {element.quoteId} </div>\n                <div>uniqueCharacters: {element.uniqueCharacters} </div>\n                <div>usernam: {element.userName} </div>\n                <div>DURATION: {Math.round(element.duration / 1000)}</div>\n                <br />\n              )\n          }\n          )\n        }\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/components/Leaderboard.js"],"names":["React","useEffect","connect","fetchUsers","images","Leaderboard","userData","loading","error","users","map","element","key","userName","Math","round","duration","length","quoteId","uniqueCharacters","mapStateToProps","state","player","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../redux/players/playerActions\";\nimport { images } from \"./images/images\";\nfunction Leaderboard({ userData, fetchUsers }) {\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return userData.loading ? (\n    <h2 className=\"h-screen bg-gray-900 flex justify-center items-center pt-10\">\n      loading...\n    </h2>\n  ) : userData.error ? (\n    <h2>{userData.error}</h2>\n  ) : (\n    <div>\n      <div className=\"pt-20 text-white text-lg bg-gray-900 text-center\">\n        LEADERBOARD\n      </div>\n      <div className=\"bg-gray-900 text-white flex justify-center items-center \">\n        <div className=\"pt-10\">\n          {userData &&\n            userData.users &&\n            userData.users.map((element, key) => {\n              return (\n                <div className=\" flex justify-center items-center mb-5\">\n                  <div className=\"ix:w-screen ix:pl-5 ix:pr-5 w-1/2 flex justify-center items-center pb-10 pt-5 border-solid border-2 border-yellow-500 rounded-lg\">\n                    <img\n                      src={images[7]}\n                      alt=\"hangmanlogo\"\n                      className=\"w-1/6 rounded-full\"\n                    />\n                    <div key={key} className=\"pl-10\">\n                      <div className=\"text-yellow-500\">\n                        USERNAME:{\" \"}\n                        <span className=\"text-white\">{element.userName}</span>\n                      </div>\n                      <div className=\"text-yellow-500\">\n                        DURATION:{\" \"}\n                        <span className=\"text-white\">\n                          {Math.round(element.duration / 1000)}\n                        </span>\n                      </div>\n                      <div className=\"text-yellow-500\">\n                        LENGTH:{\" \"}\n                        <span className=\"text-white\">{element.length}</span>\n                      </div>\n                      <div className=\"text-yellow-500\">\n                        QUOTEID:{\" \"}\n                        <span className=\"text-white\">{element.quoteId} </span>\n                      </div>\n                      <div className=\"text-yellow-500\">\n                        UNIQUE CHARACTERS:{\" \"}\n                        <span className=\"text-white\">\n                          {element.uniqueCharacters}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.player,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\n\n/**\n * {userData &&\n          userData.users &&\n          userData.users.map((element) => {\n              return(\n                <div id={element.id}>\n                <div>id: {element.id} </div>\n                <div>length: {element.length} </div>\n                <div>quoteId: {element.quoteId} </div>\n                <div>uniqueCharacters: {element.uniqueCharacters} </div>\n                <div>usernam: {element.userName} </div>\n                <div>DURATION: {Math.round(element.duration / 1000)}</div>\n                <br />\n              )\n          }\n          )\n        }\n */\n"]},"metadata":{},"sourceType":"module"}