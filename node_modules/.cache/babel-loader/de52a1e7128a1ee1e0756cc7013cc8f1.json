{"ast":null,"code":"const guesses = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set([]);\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CORRECT\":\n      return state.add(action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default guesses;","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/state/reducers/guessreducer.js"],"names":["guesses","state","Set","action","type","add","payload"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxB,IAAIC,GAAJ,CAAQ,EAAR,CAAwB;AAAA,MAAXC,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAOH,KAAK,CAACI,GAAN,CAAUF,MAAM,CAACG,OAAjB,CAAP;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CAPD;;AAQA,eAAeD,OAAf","sourcesContent":["const guesses = (state = new Set([]), action) => {\n  switch (action.type) {\n    case \"CORRECT\":\n      return state.add(action.payload);\n    default:\n      return state;\n  }\n};\nexport default guesses;\n"]},"metadata":{},"sourceType":"module"}