{"ast":null,"code":"var _jsxFileName = \"/home/chill/Desktop/hangman-ingemark/src/components/Leaderboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../redux/players/playerActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Leaderboard(_ref) {\n  _s();\n\n  let {\n    userData,\n    fetchUsers\n  } = _ref;\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return userData.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this) : userData.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: userData.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 text-white h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData && userData.users && userData.users.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Leaderboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Leaderboard;\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/components/Leaderboard.js"],"names":["React","useEffect","connect","fetchUsers","Leaderboard","userData","loading","error","users","map","user","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;;AAEA,SAASC,WAAT,OAA+C;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAYF,IAAAA;AAAZ,GAA0B;AAC7CF,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOE,QAAQ,CAACC,OAAT,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAEHD,QAAQ,CAACE,KAAT,gBACF;AAAA,cAAKF,QAAQ,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,UADE,gBAGF;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGF,QAAQ,IACPA,QAAQ,CAACG,KADV,IAECH,QAAQ,CAACG,KAAT,CAAeC,GAAf,CAAoBC,IAAD,iBAAU;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,cAA7B;AAHJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UALF;AAcD;;GAnBQP,W;;KAAAA,W;;AAqBT,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLR,IAAAA,QAAQ,EAAEQ,KAAK,CAACH;AADX,GAAP;AAGD,CAJD;;AAKA,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLZ,IAAAA,UAAU,EAAE,MAAMY,QAAQ,CAACZ,UAAU,EAAX;AADrB,GAAP;AAGD,CAJD;;AAKA,eAAeD,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,WAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../redux/players/playerActions\";\n\nfunction Leaderboard({ userData, fetchUsers }) {\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return userData.loading ? (\n    <h2>loading...</h2>\n  ) : userData.error ? (\n    <h2>{userData.error}</h2>\n  ) : (\n    <div className=\"bg-gray-900 text-white h-screen\">\n      <h2>List of users</h2>\n      <div>\n        {userData &&\n          userData.users &&\n          userData.users.map((user) => <p>{user.id}</p>)}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.user,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Leaderboard);\n"]},"metadata":{},"sourceType":"module"}