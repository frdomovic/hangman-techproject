{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_QUOTE_FAILURE, FETCH_QUOTE_SUCCESS, FETCH_QUOTE_REQUEST, SET_PLAYER_USERNAME, ADD_NEW_GUESS, INCREMENT_MISSTAKE, RESET_GAME_AND_DATA, UPDATE_TIME, PUSHING_GAME_DATA_STATUS, BASE_API_URL } from \"./userTypes\";\nconst api = axios.create({\n  baseURL: BASE_API_URL\n});\n\nconst fetchQuoteRequest = () => {\n  return {\n    type: FETCH_QUOTE_REQUEST\n  };\n};\n\nconst fetchQuoteSuccess = quoteData => {\n  return {\n    type: FETCH_QUOTE_SUCCESS,\n    payload: quoteData\n  };\n};\n\nconst fetchQuoteFailure = error => {\n  return {\n    type: FETCH_QUOTE_FAILURE,\n    payload: error\n  };\n};\n\nconst setupUsername = username => {\n  return {\n    type: SET_PLAYER_USERNAME,\n    payload: username\n  };\n};\n\nconst addNewGuess = letter => {\n  return {\n    type: ADD_NEW_GUESS,\n    payload: letter\n  };\n};\n\nconst incrementMisstake = value => {\n  return {\n    type: INCREMENT_MISSTAKE,\n    payload: value\n  };\n};\n\nconst resetGame = () => {\n  return {\n    type: RESET_GAME_AND_DATA\n  };\n};\n\nconst newTime = value => {\n  return {\n    type: UPDATE_TIME,\n    payload: value\n  };\n};\n\nconst changeSavingStatus = () => {\n  return {\n    type: PUSHING_GAME_DATA_STATUS\n  };\n};\n\nexport const fetchQuote = () => {\n  return dispatch => {\n    dispatch(fetchQuoteRequest());\n    api.get().then(res => {\n      const data = res.data;\n      dispatch(fetchQuoteSuccess(data));\n    }).catch(error => {\n      const errorMsg = error.message;\n      dispatch(fetchQuoteFailure(errorMsg));\n    });\n  };\n};\nexport const savingDataStatus = () => {\n  return dispatch => {\n    dispatch(changeSavingStatus());\n  };\n};\nexport const updateTime = value => {\n  return dispatch => {\n    dispatch(newTime(value));\n  };\n};\nexport const changeUser = username => {\n  return dispatch => {\n    dispatch(setupUsername(username));\n  };\n};\nexport const addGuess = letter => {\n  return dispatch => {\n    dispatch(addNewGuess(letter));\n  };\n};\nexport const addMisstake = value => {\n  return dispatch => {\n    dispatch(incrementMisstake(value));\n  };\n};\nexport const resetGameAndData = value => {\n  return dispatch => {\n    dispatch(resetGame());\n  };\n};","map":{"version":3,"sources":["/home/chill/Desktop/hangman-ingemark/src/redux/user/userActions.js"],"names":["axios","FETCH_QUOTE_FAILURE","FETCH_QUOTE_SUCCESS","FETCH_QUOTE_REQUEST","SET_PLAYER_USERNAME","ADD_NEW_GUESS","INCREMENT_MISSTAKE","RESET_GAME_AND_DATA","UPDATE_TIME","PUSHING_GAME_DATA_STATUS","BASE_API_URL","api","create","baseURL","fetchQuoteRequest","type","fetchQuoteSuccess","quoteData","payload","fetchQuoteFailure","error","setupUsername","username","addNewGuess","letter","incrementMisstake","value","resetGame","newTime","changeSavingStatus","fetchQuote","dispatch","get","then","res","data","catch","errorMsg","message","savingDataStatus","updateTime","changeUser","addGuess","addMisstake","resetGameAndData"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  FETCH_QUOTE_FAILURE,\n  FETCH_QUOTE_SUCCESS,\n  FETCH_QUOTE_REQUEST,\n  SET_PLAYER_USERNAME,\n  ADD_NEW_GUESS,\n  INCREMENT_MISSTAKE,\n  RESET_GAME_AND_DATA,\n  UPDATE_TIME,\n  PUSHING_GAME_DATA_STATUS,\n  BASE_API_URL,\n} from \"./userTypes\";\n\nconst api = axios.create({\n  baseURL: BASE_API_URL,\n});\n\nconst fetchQuoteRequest = () => {\n  return {\n    type: FETCH_QUOTE_REQUEST,\n  };\n};\n\nconst fetchQuoteSuccess = (quoteData) => {\n  return {\n    type: FETCH_QUOTE_SUCCESS,\n    payload: quoteData,\n  };\n};\n\nconst fetchQuoteFailure = (error) => {\n  return {\n    type: FETCH_QUOTE_FAILURE,\n    payload: error,\n  };\n};\nconst setupUsername = (username) => {\n  return {\n    type: SET_PLAYER_USERNAME,\n    payload: username,\n  };\n};\n\nconst addNewGuess = (letter) => {\n  return {\n    type: ADD_NEW_GUESS,\n    payload: letter,\n  };\n};\n\nconst incrementMisstake = (value) => {\n  return {\n    type: INCREMENT_MISSTAKE,\n    payload: value,\n  };\n};\n\nconst resetGame = () => {\n  return {\n    type: RESET_GAME_AND_DATA,\n  };\n};\n\nconst newTime = (value) => {\n  return {\n    type: UPDATE_TIME,\n    payload: value,\n  };\n};\nconst changeSavingStatus = () => {\n  return {\n    type: PUSHING_GAME_DATA_STATUS,\n  };\n};\n\nexport const fetchQuote = () => {\n  return (dispatch) => {\n    dispatch(fetchQuoteRequest());\n    api\n      .get()\n      .then((res) => {\n        const data = res.data;\n        dispatch(fetchQuoteSuccess(data));\n      })\n      .catch((error) => {\n        const errorMsg = error.message;\n        dispatch(fetchQuoteFailure(errorMsg));\n      });\n  };\n};\n\nexport const savingDataStatus = () => {\n  return (dispatch) => {\n    dispatch(changeSavingStatus());\n  };\n};\n\nexport const updateTime = (value) => {\n  return (dispatch) => {\n    dispatch(newTime(value));\n  };\n};\n\nexport const changeUser = (username) => {\n  return (dispatch) => {\n    dispatch(setupUsername(username));\n  };\n};\n\nexport const addGuess = (letter) => {\n  return (dispatch) => {\n    dispatch(addNewGuess(letter));\n  };\n};\nexport const addMisstake = (value) => {\n  return (dispatch) => {\n    dispatch(incrementMisstake(value));\n  };\n};\n\nexport const resetGameAndData = (value) => {\n  return (dispatch) => {\n    dispatch(resetGame());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}